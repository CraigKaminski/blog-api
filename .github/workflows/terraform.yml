name: Terraform

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  terraform:
    name: Terraform
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    env:
      terraform-directory: ./terraform

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}
          terraform_wrapper: false

      - name: Terraform Format
        id: fmt
        working-directory: ${{env.terraform-directory}}
        run: terraform fmt -check

      - name: Terraform Init
        id: init
        working-directory: ${{env.terraform-directory}}
        run: terraform init

      - name: Terraform Validate
        id: validate
        working-directory: ${{env.terraform-directory}}
        run: terraform validate -no-color

      - name: Terraform Plan
        id: plan
        working-directory: ${{env.terraform-directory}}
        run: terraform plan -no-color
        continue-on-error: true

      - name: Terraform Plan Status
        if: steps.plan.outcome == 'failure'
        run: exit 1

      - name: Terraform Apply
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        working-directory: ${{env.terraform-directory}}
        run: terraform apply -auto-approve
